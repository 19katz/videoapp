{"ast":null,"code":"import _toConsumableArray from\"/Users/katherinezhang/twilio-video-react-hooks/react-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/katherinezhang/twilio-video-react-hooks/react-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';var Participant=function Participant(_ref){var participant=_ref.participant;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoTracks=_useState2[0],setVideoTracks=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),audioTracks=_useState4[0],setAudioTracks=_useState4[1];var videoRef=useRef();var audioRef=useRef();var trackpubsToTracks=function trackpubsToTracks(trackMap){return Array.from(trackMap.values()).map(function(publication){return publication.track;}).filter(function(track){return track!==null;});};useEffect(function(){var trackSubscribed=function trackSubscribed(track){if(track.kind==='video'){setVideoTracks(function(videoTracks){return[].concat(_toConsumableArray(videoTracks),[track]);});}else{setAudioTracks(function(audioTracks){return[].concat(_toConsumableArray(audioTracks),[track]);});}};var trackUnsubscribed=function trackUnsubscribed(track){if(track.kind==='video'){setVideoTracks(function(videoTracks){return videoTracks.filter(function(v){return v!==track;});});}else{setAudioTracks(function(audioTracks){return audioTracks.filter(function(a){return a!==track;});});}};setVideoTracks(trackpubsToTracks(participant.videoTracks));setAudioTracks(trackpubsToTracks(participant.audioTracks));participant.on('trackSubscribed',trackSubscribed);participant.on('trackUnsubscribed',trackUnsubscribed);return function(){setVideoTracks([]);setAudioTracks([]);participant.removeAllListeners();};},[participant]);useEffect(function(){var videoTrack=videoTracks[0];if(videoTrack){videoTrack.attach(videoRef.current);return function(){videoTrack.detach();};}},[videoTracks]);return React.createElement(\"div\",{className:\"participant\"},React.createElement(\"h3\",null,participant.identity),React.createElement(\"video\",{ref:videoRef,autoPlay:true}),React.createElement(\"audio\",{ref:audioRef,autoPlay:true,muted:true}));};export default Participant;","map":{"version":3,"sources":["/Users/katherinezhang/twilio-video-react-hooks/react-frontend/src/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","attach","current","detach","identity"],"mappings":"wSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,eACDJ,QAAQ,CAAC,EAAD,CADP,wCAChCK,WADgC,eACnBC,cADmB,8BAEDN,QAAQ,CAAC,EAAD,CAFP,yCAEhCO,WAFgC,eAEnBC,cAFmB,eAIvC,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,EAAvB,CACA,GAAMQ,CAAAA,QAAQ,CAAGR,MAAM,EAAvB,CAEE,GAAMS,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,QAAQ,QAAIC,CAAAA,KAAK,CAACC,IAAN,CAAWF,QAAQ,CAACG,MAAT,EAAX,EACrCC,GADqC,CACjC,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAACC,KAAhB,EADsB,EAErCC,MAFqC,CAE9B,SAAAD,KAAK,QAAIA,CAAAA,KAAK,GAAK,IAAd,EAFyB,CAAJ,EAAlC,CAIAjB,SAAS,CAAC,UAAM,CAChB,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAF,KAAK,CAAI,CAC/B,GAAIA,KAAK,CAACG,IAAN,GAAe,OAAnB,CAA4B,CAC1Bf,cAAc,CAAC,SAAAD,WAAW,qCAAQA,WAAR,GAAqBa,KAArB,IAAZ,CAAd,CACD,CAFD,IAEO,CACLV,cAAc,CAAC,SAAAD,WAAW,qCAAQA,WAAR,GAAqBW,KAArB,IAAZ,CAAd,CACD,CACF,CAND,CAQA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAJ,KAAK,CAAI,CACjC,GAAIA,KAAK,CAACG,IAAN,GAAe,OAAnB,CAA4B,CAC1Bf,cAAc,CAAC,SAAAD,WAAW,QAAIA,CAAAA,WAAW,CAACc,MAAZ,CAAmB,SAAAI,CAAC,QAAIA,CAAAA,CAAC,GAAKL,KAAV,EAApB,CAAJ,EAAZ,CAAd,CACD,CAFD,IAEO,CACLV,cAAc,CAAC,SAAAD,WAAW,QAAIA,CAAAA,WAAW,CAACY,MAAZ,CAAmB,SAAAK,CAAC,QAAIA,CAAAA,CAAC,GAAKN,KAAV,EAApB,CAAJ,EAAZ,CAAd,CACD,CACF,CAND,CAQIZ,cAAc,CAACK,iBAAiB,CAACP,WAAW,CAACC,WAAb,CAAlB,CAAd,CACEG,cAAc,CAACG,iBAAiB,CAACP,WAAW,CAACG,WAAb,CAAlB,CAAd,CAEAH,WAAW,CAACqB,EAAZ,CAAe,iBAAf,CAAkCL,eAAlC,EACAhB,WAAW,CAACqB,EAAZ,CAAe,mBAAf,CAAoCH,iBAApC,EAEA,MAAO,WAAM,CACXhB,cAAc,CAAC,EAAD,CAAd,CACAE,cAAc,CAAC,EAAD,CAAd,CACAJ,WAAW,CAACsB,kBAAZ,GACD,CAJD,CAKD,CA5BI,CA4BF,CAACtB,WAAD,CA5BE,CAAT,CA8BAH,SAAS,CAAC,UAAM,CACd,GAAM0B,CAAAA,UAAU,CAAGtB,WAAW,CAAC,CAAD,CAA9B,CACA,GAAIsB,UAAJ,CAAgB,CACdA,UAAU,CAACC,MAAX,CAAkBnB,QAAQ,CAACoB,OAA3B,EACA,MAAO,WAAM,CACXF,UAAU,CAACG,MAAX,GACD,CAFD,CAGD,CACF,CARQ,CAQN,CAACzB,WAAD,CARM,CAAT,CAUA,MACE,4BAAK,SAAS,CAAC,aAAf,EACE,8BAAKD,WAAW,CAAC2B,QAAjB,CADF,CAEE,6BAAO,GAAG,CAAEtB,QAAZ,CAAsB,QAAQ,CAAE,IAAhC,EAFF,CAGE,6BAAO,GAAG,CAAEC,QAAZ,CAAsB,QAAQ,CAAE,IAAhC,CAAsC,KAAK,CAAE,IAA7C,EAHF,CADF,CAOH,CA1DD,CA4DA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n    \n  const videoRef = useRef();\n  const audioRef = useRef();\n    \n    const trackpubsToTracks = trackMap => Array.from(trackMap.values())\n    .map(publication => publication.track)\n    .filter(track => track !== null);\n    \n    useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n        \n        setVideoTracks(trackpubsToTracks(participant.videoTracks));\n          setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n          participant.on('trackSubscribed', trackSubscribed);\n          participant.on('trackUnsubscribed', trackUnsubscribed);\n\n          return () => {\n            setVideoTracks([]);\n            setAudioTracks([]);\n            participant.removeAllListeners();\n          };\n        }, [participant]);\n    \n    useEffect(() => {\n      const videoTrack = videoTracks[0];\n      if (videoTrack) {\n        videoTrack.attach(videoRef.current);\n        return () => {\n          videoTrack.detach();\n        };\n      }\n    }, [videoTracks]);\n    \n    return (\n      <div className=\"participant\">\n        <h3>{participant.identity}</h3>\n        <video ref={videoRef} autoPlay={true} />\n        <audio ref={audioRef} autoPlay={true} muted={true} />\n      </div>\n    );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}